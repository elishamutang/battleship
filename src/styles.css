@import url('https://unpkg.com/css.gg@2.0.0/icons/css/sync.css');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Liberation Serif';
}

:root {
    --totalNumOfTiles: 9;
    --icon-length: 250%;
    --banner-color: rgb(78, 108, 241);
    --restart-button: rgb(233, 77, 77);
    --disabled-tiles: rgba(245, 117, 117, 0.596);
    --patrolBoat-color: lightcoral;
    --destroyer-color: lightblue;
    --battleship-color: rgb(226, 226, 87);
    --carrier-color: lightgray;
}

html {
    height: 100%;
}

body {
    min-height: 100%;
}

main {
    border: 2px solid black;
    height: 100vh;

    display: grid;
    justify-content: center;
    align-items: center;
}

main.prep {
    grid-template-rows: auto 1fr;
    grid-template-areas:
        'banner'
        'realPlayer';
}

main.start {
    grid-template-rows: auto 1fr;
    grid-template-areas:
        'banner banner'
        'realPlayer computerPlayer';
}

#banner {
    grid-area: banner;
    background-color: var(--banner-color);
    color: white;
    font-size: 1rem;
    justify-self: center;
    padding: 0.5rem 1rem;
    border-bottom-left-radius: 1rem;
    border-bottom-right-radius: 1rem;
}

#realPlayer {
    grid-area: realPlayer;
}

#computerPlayer {
    grid-area: computerPlayer;
}

.gameboard {
    margin: 0 2rem;
    /* border: 1px solid red; */

    display: flex;
    flex-direction: column;
}

.patrolBoat,
.destroyer,
.battleShip,
.carrier {
    border: 1px solid black;
    background-color: white;
}

#computerPlayer > .row > *:hover {
    border: 3px solid red;
}

#computerPlayer > .row > .no-hover {
    pointer-events: none;
}

.row {
    height: calc(50vh / var(--totalNumOfTiles));
    display: flex;
    position: relative;
}

.loc {
    width: calc(50vh / var(--totalNumOfTiles));
    border: 1px solid slategray;
    cursor: pointer;
    background-color: white;

    display: flex;
    justify-content: center;
    align-items: center;
}

.no-pointer {
    cursor: default;
}

.numbering,
.alphabets {
    border: none;
}

.player {
    margin-bottom: 1rem;
    font-size: 1.2rem;
    align-self: center;
}

#realPlayer > .row > .patrolBoat {
    border: 2px solid red;
    background-color: lightcoral;
}

#realPlayer > .row > .destroyer {
    border: 2px solid blue;
    background-color: lightblue;
}

#realPlayer > .row > .battleShip {
    border: 2px solid orange;
    background-color: lightgoldenrodyellow;
}

#realPlayer > .row > .carrier {
    border: 2px solid grey;
    background-color: lightgray;
}

.clicked {
    filter: brightness(0.8);
    cursor: not-allowed;
}

.clicked.patrolBoat,
.clicked.destroyer,
.clicked.carrier,
.clicked.battleShip {
    border: 2px solid red;
    color: red;
}

.clicked.patrolBoat {
    background-color: lightcoral;
}

.clicked.destroyer {
    background-color: var(--destroyer-color);
}

.clicked.battleShip {
    background-color: var(--battleship-color);
}

.clicked.carrier {
    background-color: var(--carrier-color);
}

.clicked.boundaryLoc {
    color: red;
    background-color: var(--disabled-tiles);
    filter: brightness(0.5);
}

.lost * {
    cursor: not-allowed;
}

.shipCount {
    width: 100%;
    padding: 0.8rem;
    border-right: 1px solid gray;

    grid-area: fleets;
    /* border: 1px solid red; */
}

.battleShipIconDiv,
.destroyerIconDiv,
.patrolBoatIconDiv {
    display: flex;
    gap: 0.5rem;
}

.shipIcon {
    height: 1rem;
    margin-top: 0.5rem;
    background-color: rgb(166, 236, 166);
    display: flex;
}

.icon,
.shipIcon {
    border: 1px solid rgb(78, 221, 78);
}

.sunk,
.sunk > .icon {
    border: 1px solid rgb(248, 83, 83);
    background-color: rgb(252, 143, 143);
}

.carrierIcon {
    width: calc(var(--icon-length) / 4);
}

.carrierIcon > .icon {
    width: calc(var(--icon-length) / 3.125);
}

.battleShipIcon {
    width: calc(var(--icon-length) / 6.25);
}

.battleShipIcon > .icon {
    width: calc(var(--icon-length) / 3);
}

.destroyerIcon {
    width: calc(var(--icon-length) / 12.5);
}

.destroyerIcon > .icon {
    width: calc(var(--icon-length) / 2);
}

.patrolBoatIcon {
    width: calc(var(--icon-length) / 25);
}

.patrolBoatIcon > .icon {
    width: calc(var(--icon-length));
}

.remainingFleet {
    font-size: 1rem;
}

.boardUI {
    display: grid;
    grid-template-columns: 0.4fr 0.6fr;
    grid-template-areas: 'fleets start';

    border: 1px solid gray;
    border-bottom-left-radius: 1rem;
    border-bottom-right-radius: 1rem;
}

.tipDiv {
    grid-area: start;
    padding: 0.8rem;
}

.tipDiv > p {
    text-wrap: wrap;
    font-style: italic;
    font-size: 1rem;
}

#realPlayer > .row > .hover {
    border: 3px solid black;
}

.startBtn {
    display: inline-block;
    width: 100%;
    margin: 0.5rem 0;
    padding: 0.5rem 0;
    font-size: 1.5rem;
    cursor: pointer;

    background: var(--banner-color);
    color: white;
    border-radius: 0.5rem;
    border-style: none;
    position: relative;
    z-index: 1;
}

.startBtn::after {
    position: absolute;
    content: '';
    width: 100%;
    height: 0;
    top: 0;
    left: 0;
    z-index: -1;
    border-radius: 0.5rem;
    background-image: linear-gradient(315deg, var(--patrolBoat-color) 20%, var(--banner-color) 90%);
    box-shadow:
        inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),
        7px 7px 20px 0px rgba(0, 0, 0, 0.1),
        4px 4px 5px 0px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
}

.startBtn:hover {
    color: white;
}

.startBtn:hover::after {
    top: auto;
    bottom: 0;
    height: 100%;
}

.randomiseBtn {
    background-color: var(--banner-color);
    color: white;
    border-radius: 0.5rem;
    border-style: none;
    margin: 0.5rem 0;
    padding: 0.5rem;
    cursor: pointer;

    animation: outColor 1s ease forwards;
}

.randomiseBtn > i {
    animation: out 1s ease forwards;
}

.randomiseBtn:hover > i {
    animation: in 1s ease forwards;
}

.randomiseBtn:hover {
    animation: inColor 1s ease forwards;
}

@keyframes in {
    from {
        transform: scale(1) rotate(0deg);
    }
    to {
        transform: scale(1.3) rotate(720deg);
    }
}

@keyframes inColor {
    from {
        background-color: var(--banner-color);
    }
    to {
        background: linear-gradient(315deg, var(--patrolBoat-color) 20%, var(--destroyer-color) 80%);
    }
}

@keyframes out {
    from {
        transform: scale(1.3) rotate(720deg);
    }
    to {
        transform: scale(1) rotate(0deg);
    }
}

@keyframes outColor {
    from {
        background: linear-gradient(315deg, var(--patrolBoat-color) 20%, var(--destroyer-color) 80%);
    }
    to {
        background-color: var(--banner-color);
    }
}

.gameboard.gameover {
    opacity: 0.5;
    pointer-events: none;
}

#banner.endGame {
    background-color: var(--banner-color);
    color: white;
    padding: 0.5rem;
    display: inline-flex;
    gap: 0.5rem;
    width: 50%;
    justify-content: center;
    justify-self: center;

    border-bottom-left-radius: 1rem;
    border-bottom-right-radius: 1rem;

    grid-area: banner;
}

#restartBtn {
    cursor: pointer;
    background-color: var(--restart-button);
    font-size: 1rem;
    padding: 0.5rem;
    color: white;
    border-radius: 0.4rem;

    font-weight: bold;
    transition: 0.3s;
}

#restartBtn:hover {
    color: var(--restart-button);
    background-color: white;

    letter-spacing: 0.1rem;
}

.gameboard.move > .row > .loc {
    pointer-events: none;
    opacity: 0.4;
}

.overlay {
    position: absolute;
    background-color: white;
    border: 5px solid var(--banner-color);
    opacity: 0.8;
    width: 100%;
    height: 55.5vh;
    z-index: 99;

    display: flex;
    justify-content: center;
    align-items: center;
}

.overlayText {
    font-weight: bold;
    text-wrap: wrap;
}

.overlayText > span {
    color: var(--banner-color);
    padding: 3px;
    border: 3px solid var(--banner-color);
}

.drop-here {
    border: 3px solid blue;
}

.noDrop {
    background-color: grey;
    pointer-events: none;
    cursor: not-allowed;
}

.loc:has(> .loc.shipDiv) {
    position: relative;
    border: 0;
}

#computerPlayer > .row > .loc:has(> .loc.shipDiv) {
    border: 1px solid slategray;
}

#computerPlayer > .row > .loc:has(> .loc.shipDiv):hover {
    border: 3px solid red;
}

.shipDiv {
    position: absolute;
    height: 100%;
    opacity: 0.8;
    z-index: 99;
}

.shipDiv.vertical {
    top: 0;
}

.shipDiv.vertical.last-row {
    bottom: 0;
    top: unset;
}

.shipDiv.horizontal {
    left: 0;
}

.shipDiv.patrolBoat {
    background-color: var(--patrolBoat-color);
    border: 2px solid red;
}

.shipDiv.destroyer {
    background-color: var(--destroyer-color);
    border: 2px solid blue;
}

.shipDiv.destroyer.horizontal {
    width: calc(50vh * 2 / var(--totalNumOfTiles));
}

.shipDiv.destroyer.vertical {
    height: calc(50vh * 2 / var(--totalNumOfTiles));
}

.shipDiv.battleShip {
    background-color: var(--battleship-color);
    border: 2px solid orangered;
}

.shipDiv.battleShip.horizontal {
    width: calc(50vh * 3 / var(--totalNumOfTiles));
}

.shipDiv.battleShip.vertical {
    height: calc(50vh * 3 / var(--totalNumOfTiles));
}

.shipDiv.carrier {
    background-color: var(--carrier-color);
    border: 2px solid grey;
}

.shipDiv.carrier.horizontal {
    width: calc(50vh * 4 / var(--totalNumOfTiles));
}

.shipDiv.carrier.vertical {
    height: calc(50vh * 4 / var(--totalNumOfTiles));
}

.no-path {
    pointer-events: none;
}

#buttonsContainer {
    display: flex;
    gap: 2%;
}
